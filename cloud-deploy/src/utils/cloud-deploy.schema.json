{
  "$id": "cloud-deploy.schema.json",
  "title": "CloudDeploy",
  "type": "object",
  "properties": {
    "labels": {
      "$ref": "#/$defs/Labels"
    },
    "security": {
      "$ref": "#/$defs/Security"
    },
    "environments": {
      "$ref": "#/$defs/Environments"
    }
  },
  "required": [
    "security",
    "labels",
    "environments"
  ],
  "oneOf": [
    {
      "title": "CloudRun",
      "required": [
        "cloud-run"
      ],
      "properties": {
        "cloud-run": {
          "$ref": "#/$defs/CloudRun"
        }
      }
    },
    {
      "title": "Kubernetes",
      "required": [
        "kubernetes"
      ],
      "properties": {
        "kubernetes": {
          "$ref": "#/$defs/Kubernetes"
        }
      }
    }
  ],
  "$defs": {
    "CloudRun": {
      "title": "CloudRun",
      "description": "Managed Cloud Run service",
      "type": "object",
      "required": [
        "service",
        "resources",
        "protocol",
        "scaling"
      ],
      "properties": {
        "service": {
          "$ref": "#/$defs/ServiceName"
        },
        "resources": {
          "$ref": "#/$defs/Resources"
        },
        "protocol": {
          "$ref": "#/$defs/Protocol"
        },
        "timeout": {
          "$ref": "#/$defs/RequestTimeout"
        },
        "scaling": {
          "title": "ScalingCloudRun",
          "description": "Scaling settings for Cloud Run",
          "type": "object",
          "required": [
            "concurrency"
          ],
          "properties": {
            "concurrency": {
              "description": "Concurrent number of requests that an instance can handle.",
              "type": "integer",
              "minimum": 10,
              "maximum": 1000
            },
            "schedule": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/ScheduledScaling"
              }
            }
          },
          "additionalProperties": false
        },
        "traffic": {
          "title": "TrafficCloudRun",
          "description": "Traffic settings for Cloud Run",
          "type": "object",
          "required": [
            "serve-traffic"
          ],
          "properties": {
            "serve-traffic": {
              "description": "Deploy revision with or without traffic",
              "type": "boolean",
              "default": true
            }
          },
          "additionalProperties": false
        },
        "startup-cpu-boost": {
          "description": "Whether to allocate extra CPU to containers on startup.",
          "type": "boolean",
          "default": false
        },
        "cpu-throttling": {
          "description": "Whether to throttle the CPU when the container is not actively serving requests.",
          "type": "boolean",
          "default": true
        },
        "session-affinity": {
          "description": "Whether to enable session affinity for connections to the service.",
          "type": "boolean",
          "default": false
        },
        "vpc-connector": {
          "description": "Whether to use the vpc connector or direct connection to the vpc",
          "type": "boolean",
          "default": true
        },
        "internal-traffic": {
          "description": "Whether to setup internal traffic or not",
          "type": "boolean",
          "default": true
        },
        "monitoring": {
          "$ref": "#/$defs/Monitoring"
        }
      },
      "additionalProperties": false
    },
    "Kubernetes": {
      "title": "Kubernetes",
      "description": "A kubernetes service",
      "type": "object",
      "required": [
        "service",
        "type",
        "resources",
        "protocol",
        "scaling"
      ],
      "properties": {
        "service": {
          "$ref": "#/$defs/ServiceName"
        },
        "type": {
          "description": "The type of service",
          "type": "string",
          "enum": [
            "Deployment",
            "StatefulSet"
          ]
        },
        "resources": {
          "$ref": "#/$defs/Resources"
        },
        "protocol": {
          "$ref": "#/$defs/Protocol"
        },
        "timeout": {
          "$ref": "#/$defs/RequestTimeout"
        },
        "availability": {
          "$ref": "#/$defs/Availability"
        },
        "scaling": {
          "title": "ScalingKubernetes",
          "description": "Scaling settings for Kubernetes",
          "type": "object",
          "required": [
            "cpu"
          ],
          "properties": {
            "cpu": {
              "description": "Average CPU percentage utilization for scaling.",
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            "vertical": {
              "description": "Config for vertical scaling",
              "type": "object",
              "properties": {
                "threshold": {
                  "description": "CPU percentage utilization for 1 pod to trigger vertical scaling.",
                  "type": "integer",
                  "minimum": 10,
                  "maximum": 100
                },
                "increments-cpu": {
                  "description": "CPU request increase on scale out trigger",
                  "type": "number",
                  "minimum": 0.5,
                  "maximum": 2
                },
                "max-cpu": {
                  "description": "Max CPU allowed on scale out",
                  "type": "number",
                  "minimum": 0.25,
                  "maximum": 10
                },
                "max-memory": {
                  "description": "Max memory allowed on scale out in (Mi)",
                  "type": "string",
                  "pattern": "^[0-9]+(M|G)i"
                }
              }
            }
          },
          "additionalProperties": false
        },
        "volumes": {
          "title": "Volumes",
          "description": "Volumes to mount. Volumes are only supported with StatefulSet.",
          "type": "array",
          "items": {
            "title": "Volume",
            "description": "A volume mount",
            "type": "object",
            "required": [
              "size",
              "mount-path"
            ],
            "properties": {
              "disk-type": {
                "description": "The disk type",
                "type": "string",
                "enum": [
                  "hdd",
                  "ssd"
                ],
                "default": "hdd"
              },
              "size": {
                "description": "The disk size",
                "type": "string",
                "pattern": "^[0-9]+(M|G)i"
              },
              "mount-path": {
                "description": "The mount path",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "monitoring": {
          "$ref": "#/$defs/Monitoring"
        }
      },
      "additionalProperties": false
    },
    "Monitoring": {
      "title": "Monitoring",
      "type": "object",
      "properties": {
        "prometheus": {
          "type": "object",
          "required": [
            "interval"
          ],
          "properties": {
            "interval": {
              "type": "integer",
              "description": "The scrape interval in seconds",
              "minimum": 10
            },
            "path": {
              "type": "string",
              "description": "The scrape path",
              "default": "/metrics"
            },
            "port": {
              "type": "integer",
              "description": "The scrape port",
              "default": 8080
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "ServiceName": {
      "title": "ServiceName",
      "description": "Service name",
      "type": "string"
    },
    "Protocol": {
      "title": "Protocol",
      "description": "The type of protocol. Make sure to set http2 if this service is using gRPC or WebSockets",
      "type": "string",
      "enum": [
        "http",
        "http2"
      ]
    },
    "RequestTimeout": {
      "title": "RequestTimeout",
      "description": "The request timeout in seconds",
      "type": "integer",
      "minimum": 1,
      "maximum": 3600,
      "default": 300
    },
    "Availability": {
      "title": "Availability",
      "description": "Availability to configure priority on autoscaling",
      "type": "string",
      "enum": [
        "low",
        "high"
      ]
    },
    "Resources": {
      "title": "Resources",
      "description": "The requested resources",
      "type": "object",
      "properties": {
        "cpu": {
          "description": "Number of requested CPU cores",
          "type": "number",
          "minimum": 0.25,
          "maximum": 8
        },
        "memory": {
          "description": "Amount of memory to request",
          "type": "string",
          "pattern": "^[0-9]+(M|G)i"
        }
      }
    },
    "ScheduledScaling": {
      "title": "ScheduledScaling",
      "description": "Scale in and out on demand",
      "type": "object",
      "required": [
        "scale-hours"
      ],
      "properties": {
        "scale-hours": {
          "description": "A string representing the hours to be scaled out",
          "type": "string",
          "pattern": "^[0-2]{1}[0-9]{1}:[0-5]{1}[0-9]{1}-[0-2]{1}[0-9]{1}:[0-5]{1}[0-9]{1}"
        },
        "region": {
          "description": "The region to target",
          "type": "string",
          "default": "europe-west1"
        }
      },
      "additionalProperties": false
    },
    "Security": {
      "title": "Security",
      "oneOf": [
        {
          "title": "SecurityNone",
          "description": "Do not use platform security features",
          "type": "string",
          "constant": "none"
        },
        {
          "title": "IAMSettings",
          "description": "IAM Security settings",
          "type": "object",
          "additionalProperties": false,
          "required": [
            "permission-prefix"
          ],
          "properties": {
            "permission-prefix": {
              "description": "IAM permission prefix",
              "type": "string",
              "pattern": "^[a-z]{3}$"
            },
            "system-name": {
              "description": "IAM system name defaults to service name",
              "type": "string",
              "pattern": "^[a-z-]+$"
            },
            "resources": {
              "$ref": "#/$defs/Resources",
              "default": {
                "cpu": 0.5,
                "memory": "512Mi"
              }
            },
            "cloud-armor": {
              "$ref": "#/$defs/CloudArmor"
            }
          }
        },
        {
          "title": "IAMBindingSettings",
          "description": "IAM binding Security settings",
          "type": "object",
          "additionalProperties": false,
          "required": [
            "consumers"
          ],
          "properties": {
            "cloud-armor": {
              "$ref": "#/$defs/CloudArmor"
            },
            "consumers": {
              "description": "IAM service Consumers",
              "type": "object",
              "additionalProperties": false,
              "required": [
                "service-accounts"
              ],
              "properties": {
                "service-accounts": {
                  "description": "IAM Service, user and group accounts",
                  "type": "array",
                  "items": {
                    "title": "ConsumerAccount",
                    "description": "A google user, service or group account",
                    "type": "string"
                  }
                },
                "audiences": {
                  "description": "IAM service custom audiences allowed",
                  "type": "array",
                  "items": {
                    "title": "ConsumerAudience",
                    "description": "An audience allowed through the service",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        {
          "title": "CloudArmor",
          "description": "Use cloud armor policy",
          "additionalProperties": false,
          "type": "object",
          "required": [
            "cloud-armor"
          ],
          "properties": {
            "cloud-armor": {
              "$ref": "#/$defs/CloudArmor"
            }
          }
        }
      ]
    },
    "Environments": {
      "title": "Environments",
      "description": "Deploy environments",
      "type": "object",
      "request": [
        "production",
        "staging"
      ],
      "properties": {
        "production": {
          "description": "Production environment",
          "$ref": "#/$defs/Environment"
        },
        "staging": {
          "description": "Staging environment",
          "oneOf": [
            {
              "title": "StagingNone",
              "description": "Do not use a staging environment",
              "type": "string",
              "constant": "none"
            },
            {
              "$ref": "#/$defs/Environment"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "CloudArmor": {
      "title": "CloudArmor",
      "description": "Use cloud armor policy",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "policy-name"
      ],
      "properties": {
        "policy-name": {
          "description": "Cloud armor policy name",
          "type": "string"
        }
      }
    },
    "Environment": {
      "title": "Environment",
      "description": "A deploy environment",
      "type": "object",
      "required": [
        "min-instances"
      ],
      "properties": {
        "min-instances": {
          "description": "Minimum number of instances",
          "type": "integer",
          "minimum": 0,
          "maximum": 1000
        },
        "max-instances": {
          "description": "Maximum number of instances",
          "type": "integer",
          "minimum": 0,
          "maximum": 1000,
          "default": 100
        },
        "domain-mappings": {
          "title": "DomainMappings",
          "description": "Service domain mappings",
          "type": "array",
          "items": {
            "title": "Domain",
            "description": "Fully qualified domain name",
            "type": "string"
          }
        },
        "path-mappings": {
          "title": "PathMappings",
          "description": "Service path mappings",
          "type": "array",
          "items": {
            "title": "PathRule",
            "description": "PathRules",
            "type": "object",
            "properties": {
              "oneOf": [
                {
                  "title": "Bucket target",
                  "description": "Bucket target",
                  "type": "string",
                  "constant": "none"
                },
                {
                  "title": "Service target",
                  "description": "Service target",
                  "type": "string",
                  "constant": "none"
                }
              ],
              "paths": {
                "title": "Paths",
                "description": "Target paths",
                "type": "array",
                "items": {
                  "title": "path",
                  "description": "Fully qualified path",
                  "type": "string",
                  "pattern": "^\/(.*)(\/\\*)$"
                }
              }
            }
          }
        },
        "env": {
          "title": "EnvVars",
          "description": "Environment variables and secrets",
          "type": "object",
          "patternProperties": {
            "^[A-Z0-9_]+$": {
              "title": "EnvVar",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "regions": {
          "title": "Regions",
          "description": "A list of regions in case of multi-regional deploy",
          "type": "array",
          "items": {
            "title": "GoogleRegion",
            "description": "A Google Cloud region, e.g. europe-west1",
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "Labels": {
      "title": "Labels",
      "type": "object",
      "required": [
        "component",
        "product"
      ],
      "properties": {
        "component": {
          "$ref": "#/$defs/Label"
        },
        "product": {
          "$ref": "#/$defs/Label"
        },
        "iso-country": {
          "$ref": "#/$defs/Label",
          "default": "global"
        },
        "tenant-alias": {
          "$ref": "#/$defs/Label",
          "default": "multi-tenant"
        }
      },
      "patternProperties": {
        "^[a-z-]+$": {
          "$ref": "#/$defs/Label"
        }
      },
      "additionalProperties": false
    },
    "Label": {
      "title": "Label",
      "description": "A label value",
      "type": "string",
      "pattern": "^[a-z-]+$"
    }
  }
}
