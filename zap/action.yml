# action.yml
name: 'zap'
description: 'Trigger ZAP API Scanning test'
inputs:
  audience:
    description: 'The service audience'
    required: true
  openapi:
    description: 'Location of OpenAPI file (URL)'
    required: true
  rules:
    description: 'The tsv file that declares the rules'
    required: false
  service-account-key:
    description: The service account to use
    required: true
  slack-channel:
    description: 'The slack channel to notify'
    required: true
runs:
  using: composite
  steps:
    - uses: actions/checkout@v4

    - uses: extenda/actions/setup-gcloud@v0
      id: gcloud
      with:
        service-account-key: ${{ inputs.service-account-key }}

    - name: Extract service account
      shell: bash
      run: echo "SERVICE_ACCOUNT=$(gcloud config get account)" >> $GITHUB_ENV

    - uses: extenda/actions/identity-token@v0
      with:
        service-account-key: ${{ inputs.service-account-key }}
        service-account: ${{ env.SERVICE_ACCOUNT }}
        audiences: ${{ inputs.audience }}

    - name: Copy rules
      shell: bash
      run: cp ${{ inputs.rules || env.GITHUB_ACTION_PATH + '/rules.tsv' }} ./rules.tsv

    - name: ZAP Scan
      uses: zaproxy/action-api-scan@v0.8.0
      env:
        ZAP_AUTH_HEADER_VALUE: 'Bearer ${{ env.IDENTITY_TOKEN }}'
      with:
        docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
        format: openapi
        target: ${{ inputs.openapi }}
        rules_file_name: './rules.tsv'
        allow_issue_writing: false
        cmd_options: '-a'
        fail_action: true

    - name: Publish ZAP results
      if: always()
      shell: bash
      run: cat report_md.md >> $GITHUB_STEP_SUMMARY

    - name: Notify Slack if scan failed
      if: failure()
      uses: extenda/actions/slack-notify@v0
      with:
        text: |
          :heavy_exclamation_mark: ZAP API scanning found vulnerabilites!
          View job: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        channel: ${{ inputs.slack-channel }}
        service-account-key: ${{ inputs.service-account-key }}
